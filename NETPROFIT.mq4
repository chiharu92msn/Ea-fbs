/*
   Generated by EX4-TO-MQ4 decompiler V4.0.409.1i [-]
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2008-2011, expforex"
#property link      "http://www.expforex.com"

//#include <stdlib.mqh>
#import "stdlib.ex4"
   string ErrorDescription(int a0);
#import

extern string aa4 = "----------------------------------------------------------------------------";
extern bool BuyStop = TRUE;
extern bool SellStop = TRUE;
extern bool BuyLimit = FALSE;
extern bool SellLimit = FALSE;
extern bool KanalPending = FALSE;
extern string aa5 = "----------------------------------------------------------------------------";
extern int Dist = 100;
extern int TP = 100;
extern int SL = 0;
extern int kolOrder = 10;
extern string aa7 = "----------------------------------------------------------------------------";
extern string autolot_ = "Настройки автолота";
extern double Lots = 0.1;
extern bool DynamicLot = FALSE;
extern double LotBalancePcnt = 20.0;
extern double MinLot = 0.1;
extern double MaxLot = 5.0;
extern double Martin = 1.0;
extern string ab7 = "----------------------------------------------------------------------------";
extern bool MarketWatch = FALSE;
extern int Slippage = 1;
extern int Magic = 1;
extern string aa6 = "----------------------------------------------------------------------------";
extern bool Trailing = FALSE;
extern string _P_Trailing1 = "Только позиции в прибыли";
extern bool IfProfTrail = FALSE;
extern int TrailingStop = 0;
extern int TrailingStep = 1;
extern string aa78 = "----------------------------- -----------------------------------------------";
extern bool CleanOldOrder = TRUE;
extern bool ReOpen = TRUE;
extern int DayClose = 5;
extern int CloseHour = 23;
extern int CloseMinute = 59;
bool gi_unused_268 = FALSE;
double gd_272;
double gd_280;
double gd_288;
double gd_308;
bool gi_316 = FALSE;
double gd_332;
double gd_340;
double gd_348;
int gi_360;

int f0_6(string a_symbol_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1, int ai_16 = 1000000) {
   int cmd_28;
   int order_total_24 = OrdersTotal();
   if (a_symbol_0 == "" || a_symbol_0 == "0") a_symbol_0 = Symbol();
   double point_32 = MarketInfo(a_symbol_0, MODE_POINT);
   if (point_32 == 0.0) {
      if (StringFind(a_symbol_0, "JPY") < 0) point_32 = 0.0001;
      else point_32 = 0.01;
   }
   for (int pos_20 = 0; pos_20 < order_total_24; pos_20++) {
      if (OrderSelect(pos_20, SELECT_BY_POS, MODE_TRADES)) {
         cmd_28 = OrderType();
         if (OrderSymbol() == a_symbol_0 && a_cmd_8 < OP_BUY || cmd_28 == a_cmd_8 && cmd_28 > OP_SELL) {
            if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) {
               if (cmd_28 == OP_BUY || cmd_28 == OP_BUYLIMIT || cmd_28 == OP_BUYSTOP)
                  if (MathAbs(MarketInfo(a_symbol_0, MODE_ASK) - OrderOpenPrice()) > ai_16 * point_32) OrderDelete(OrderTicket());
               if (cmd_28 == OP_SELL || cmd_28 == OP_SELLLIMIT || cmd_28 == OP_SELLSTOP)
                  if (MathAbs(OrderOpenPrice() - MarketInfo(a_symbol_0, MODE_BID)) > ai_16 * point_32) OrderDelete(OrderTicket());
            }
         }
      }
   }
   return (0);
}

int init() {
   gd_308 = AccountBalance();
   f0_16("", -1, -1);
   if (!GlobalVariableCheck(AccountNumber() + Symbol() + DoubleToStr(Magic, 0))) GlobalVariableSet(AccountNumber() + Symbol() + DoubleToStr(Magic, 0), Ask);
   if (GlobalVariableCheck(AccountNumber() + Symbol() + DoubleToStr(Magic, 0))) gd_288 = GlobalVariableGet(AccountNumber() + Symbol() + DoubleToStr(Magic, 0));
   if (IsTesting()) gd_288 = Ask;
   Comment(gd_288);
   gd_332 = gd_288 + Dist * kolOrder * Point;
   gd_340 = gd_288 - Dist * kolOrder * Point;
   gd_348 = gd_288;
   Print(gd_288 + " " + gd_332 + " " + gd_340);
   int li_unused_0 = Dist;
   return (0);
}

int start() {
   int li_4;
   if (IsDemo() == FALSE) Alert("Only on Demo account");
   if (IsDemo() == FALSE) return (1);
   if (TrailingStop == 0) TrailingStop = MarketInfo(Symbol(), MODE_STOPLEVEL) + MarketInfo(Symbol(), MODE_SPREAD);
   if (Trailing) f0_2(Symbol(), -1, Magic);
   bool li_0 = f0_12(DoubleToStr(CloseHour, 0), DoubleToStr(CloseMinute, 0), DayClose);
   if (li_0 && ReOpen) {
      f0_16(Symbol(), -1, Magic);
      f0_9(Symbol(), -1, Magic);
   }
   if (ReOpen && DayOfWeek() != DayClose && gi_360 != f0_8(Symbol(), Magic)) {
      gi_360 = f0_11(Symbol(), -1, Magic, DoubleToStr(CloseHour, 0), DoubleToStr(CloseMinute, 0), DayClose);
      Comment(TimeToStr(TimeCurrent(), TIME_DATE|TIME_MINUTES) + " " + DayOfWeek());
   }
   if (CleanOldOrder) f0_6(Symbol(), -1, Magic, (kolOrder + 1) * Dist);
   if (!li_0) {
      li_4 = Dist;
      if (!gi_316) {
         if (KanalPending) {
            for (int li_8 = 1; li_8 <= kolOrder; li_8++) {
               if (BuyStop) {
                  if (SL > 0) gd_272 = gd_288 + li_4 * Point - SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 + li_4 * Point + TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_BUYSTOP, Magic, 0, gd_288 + li_4 * Point) && gd_288 + li_4 * Point <= gd_332 && gd_288 + li_4 * Point > gd_348) && !f0_3(Symbol(), 0, Magic,
                     0, gd_288 + li_4 * Point) && gd_288 + (li_4 * Point - Ask) >= li_4 / 2 * Point) f0_10(Symbol(), OP_BUYSTOP, f0_0(), gd_288 + li_4 * Point, gd_272, gd_280, Magic);
               }
               if (SellStop) {
                  if (SL > 0) gd_272 = gd_288 - li_4 * Point + SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 - li_4 * Point - TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_SELLSTOP, Magic, 0, gd_288 - li_4 * Point) && gd_288 - li_4 * Point >= gd_340 && gd_288 - li_4 * Point < gd_348) && !f0_3(Symbol(), 1, Magic,
                     0, gd_288 - li_4 * Point) && Ask - (gd_288 - li_4 * Point) >= li_4 / 2 * Point) f0_10(Symbol(), OP_SELLSTOP, f0_0(), gd_288 - li_4 * Point, gd_272, gd_280, Magic);
               }
               if (BuyLimit) {
                  if (SL > 0) gd_272 = gd_288 - li_4 * Point - SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 - li_4 * Point + TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_BUYLIMIT, Magic, 0, gd_288 - li_4 * Point) && gd_288 - li_4 * Point >= gd_340 && gd_288 - li_4 * Point < gd_348) && !f0_3(Symbol(), 0, Magic,
                     0, gd_288 - li_4 * Point) && Ask - (gd_288 - li_4 * Point) >= li_4 / 2 * Point) f0_10(Symbol(), OP_BUYLIMIT, f0_0(), gd_288 - li_4 * Point, gd_272, gd_280, Magic);
               }
               if (SellLimit) {
                  if (SL > 0) gd_272 = gd_288 + li_4 * Point + SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 + li_4 * Point - TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_SELLLIMIT, Magic, 0, gd_288 + li_4 * Point) && gd_288 + li_4 * Point <= gd_332 && gd_288 + li_4 * Point > gd_348) && !f0_3(Symbol(), 1, Magic,
                     0, gd_288 + li_4 * Point) && gd_288 + li_4 * Point - Ask >= li_4 / 2 * Point) f0_10(Symbol(), OP_SELLLIMIT, f0_0(), gd_288 + li_4 * Point, gd_272, gd_280, Magic);
               }
               li_4 += Dist;
            }
            if (gd_288 + Dist * Point < Ask) gd_288 += Dist * Point;
            if (gd_288 - Dist * Point > Ask) gd_288 -= Dist * Point;
         }
         if (!KanalPending) {
            for (int li_12 = 1; li_12 <= kolOrder; li_12++) {
               if (BuyStop) {
                  if (SL > 0) gd_272 = gd_288 + li_4 * Point - SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 + li_4 * Point + TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_BUYSTOP, Magic, 0, gd_288 + li_4 * Point)) && !f0_3(Symbol(), 0, Magic, 0, gd_288 + li_4 * Point) && gd_288 + (li_4 * Point - Ask) >= li_4 / 2 * Point) f0_10(Symbol(), OP_BUYSTOP, f0_0(), gd_288 + li_4 * Point, gd_272, gd_280, Magic);
               }
               if (SellStop) {
                  if (SL > 0) gd_272 = gd_288 - li_4 * Point + SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 - li_4 * Point - TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_SELLSTOP, Magic, 0, gd_288 - li_4 * Point)) && !f0_3(Symbol(), 1, Magic, 0, gd_288 - li_4 * Point) && Ask - (gd_288 - li_4 * Point) >= li_4 / 2 * Point) f0_10(Symbol(), OP_SELLSTOP, f0_0(), gd_288 - li_4 * Point, gd_272, gd_280, Magic);
               }
               if (BuyLimit) {
                  if (SL > 0) gd_272 = gd_288 - li_4 * Point - SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 - li_4 * Point + TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_BUYLIMIT, Magic, 0, gd_288 - li_4 * Point)) && !f0_3(Symbol(), 0, Magic, 0, gd_288 - li_4 * Point) && Ask - (gd_288 - li_4 * Point) >= li_4 / 2 * Point) f0_10(Symbol(), OP_BUYLIMIT, f0_0(), gd_288 - li_4 * Point, gd_272, gd_280, Magic);
               }
               if (SellLimit) {
                  if (SL > 0) gd_272 = gd_288 + li_4 * Point + SL * Point;
                  else gd_272 = 0;
                  if (TP > 0) gd_280 = gd_288 + li_4 * Point - TP * Point;
                  else gd_280 = 0;
                  if ((!f0_1(Symbol(), OP_SELLLIMIT, Magic, 0, gd_288 + li_4 * Point)) && !f0_3(Symbol(), 1, Magic, 0, gd_288 + li_4 * Point) && gd_288 + li_4 * Point - Ask >= li_4 / 2 * Point) f0_10(Symbol(), OP_SELLLIMIT, f0_0(), gd_288 + li_4 * Point, gd_272, gd_280, Magic);
               }
               li_4 += Dist;
            }
            if (gd_288 + Dist * Point < Ask) gd_288 += Dist * Point;
            if (gd_288 - Dist * Point > Ask) gd_288 -= Dist * Point;
         }
      }
   }
   return (0);
}

void f0_7() {
   bool is_closed_0;
   color color_4;
   double order_lots_8;
   double price_16;
   double price_24;
   double price_32;
   int error_40;
   string ls_unused_48 = " Автор функции для шаблона : www.expforex.at.ua";
   if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
      for (int li_44 = 1; li_44 <= 5; li_44++) {
         if (!IsTesting() && (!IsExpertEnabled()) || IsStopped()) break;
         while (!IsTradeAllowed()) Sleep(5000);
         RefreshRates();
         price_16 = MarketInfo(OrderSymbol(), MODE_ASK);
         price_24 = MarketInfo(OrderSymbol(), MODE_BID);
         if (OrderType() == OP_BUY) price_32 = price_24;
         else price_32 = price_16;
         order_lots_8 = OrderLots();
         is_closed_0 = OrderClose(OrderTicket(), order_lots_8, price_32, 1, color_4);
         if (is_closed_0) break;
         error_40 = GetLastError();
         if (error_40 == 146/* TRADE_CONTEXT_BUSY */) while (IsTradeContextBusy()) Sleep(11000);
         Sleep(5000);
      }
   }
}

void f0_9(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1) {
   int order_total_20 = OrdersTotal();
   string ls_unused_24 = " Автор функции для шаблона : www.expforex.at.ua";
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_16 = order_total_20 - 1; pos_16 >= 0; pos_16--) {
      if (OrderSelect(pos_16, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == as_0 || as_0 == "" && a_cmd_8 < OP_BUY || OrderType() == a_cmd_8) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL)
               if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) f0_7();
         }
      }
   }
}

int f0_16(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1, int ai_16 = 0) {
   int cmd_28;
   int li_24 = OrdersTotal();
   if (as_0 == "0") as_0 = Symbol();
   for (int order_total_20 = li_24; order_total_20 >= 0; order_total_20--) {
      if (OrderSelect(order_total_20, SELECT_BY_POS, MODE_TRADES)) {
         cmd_28 = OrderType();
         if (cmd_28 > OP_SELL && cmd_28 < 6) {
            if (OrderSymbol() == as_0 || as_0 == "" && a_cmd_8 < OP_BUY || cmd_28 == a_cmd_8) {
               if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) {
                  if (ai_16 <= OrderOpenTime()) {
                     OrderDelete(OrderTicket(), Black);
                     return (1);
                  }
               }
            }
         }
      }
   }
   return (0);
}

double f0_0(double ad_unused_0 = 1.0) {
   double ld_24;
   int li_48;
   double price_52;
   string ls_unused_8 = " Автор функции для шаблона : www.expforex.at.ua";
   string ls_16 = AccountCurrency();
   if (MarketInfo(Symbol(), MODE_LOTSTEP) == 0.01) li_48 = 2;
   else li_48 = 1;
   if (ls_16 == "USD") {
      if (StringSubstr(Symbol(), 0, 3) == "USD") ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
      else {
         if (StringSubstr(Symbol(), 3, 3) == "USD") ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / Ask / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
         else {
            price_52 = MarketInfo(StringSubstr(Symbol(), 0, 3) + "USD", MODE_ASK);
            if (price_52 != 0.0) ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / price_52 / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
            else ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
         }
      }
   }
   if (ls_16 == "EUR") {
      if (StringSubstr(Symbol(), 0, 3) == "EUR") ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
      else {
         price_52 = MarketInfo("EUR" + StringSubstr(Symbol(), 0, 3), MODE_BID);
         if (price_52 != 0.0) ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() * price_52 / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
         else ld_24 = NormalizeDouble(AccountFreeMargin() * LotBalancePcnt * AccountLeverage() / 100.0 / MarketInfo(Symbol(), MODE_LOTSIZE), li_48);
      }
   }
   double ld_32 = MinLot;
   double ld_40 = MaxLot;
   if (!DynamicLot) ld_24 = Lots;
   if (Martin > 1.0) ld_24 *= Martin * f0_5(Symbol(), -1, Magic);
   if (ld_24 < ld_32) ld_24 = ld_32;
   if (ld_24 > ld_40) ld_24 = ld_40;
   return (NormalizeDouble(ld_24, 2));
}

int f0_5(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1) {
   double ld_ret_16 = 0;
   int order_total_28 = OrdersTotal();
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_24 = 0; pos_24 < order_total_28; pos_24++) {
      if (OrderSelect(pos_24, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == as_0 || as_0 == "") {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
               if (a_cmd_8 < OP_BUY || OrderType() == a_cmd_8)
                  if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) ld_ret_16++;
            }
         }
      }
   }
   return (ld_ret_16);
}

int f0_10(string a_symbol_0, int a_cmd_8, double a_lots_12, double ad_20, double ad_28 = 0.0, double ad_36 = 0.0, int a_magic_44 = 0, string a_comment_48 = "", int a_datetime_56 = 0) {
   color color_60;
   int datetime_64;
   double ask_68;
   double bid_76;
   double point_84;
   int error_92;
   int ticket_100;
   if (a_symbol_0 == "" || a_symbol_0 == "0") a_symbol_0 = Symbol();
   int stoplevel_104 = MarketInfo(a_symbol_0, MODE_STOPLEVEL);
   if (a_datetime_56 > 0 && a_datetime_56 < TimeCurrent()) a_datetime_56 = 0;
   for (int li_96 = 1; li_96 <= 1; li_96++) {
      if (!IsTesting() && (!IsExpertEnabled()) || IsStopped()) {
         Print("SetOrder(): Остановка работы функции");
         break;
      }
      while (!IsTradeAllowed()) Sleep(5000);
      RefreshRates();
      datetime_64 = TimeCurrent();
      if (!MarketWatch) {
         ticket_100 = OrderSend(a_symbol_0, a_cmd_8, a_lots_12, NormalizeDouble(ad_20, MarketInfo(a_symbol_0, MODE_DIGITS)), Slippage, NormalizeDouble(ad_28, MarketInfo(a_symbol_0,
            MODE_DIGITS)), NormalizeDouble(ad_36, MarketInfo(a_symbol_0, MODE_DIGITS)), a_comment_48, a_magic_44, a_datetime_56, color_60);
      }
      if (MarketWatch) {
         ticket_100 = OrderSend(a_symbol_0, a_cmd_8, a_lots_12, NormalizeDouble(ad_20, MarketInfo(a_symbol_0, MODE_DIGITS)), Slippage, 0, 0, a_comment_48, a_magic_44, a_datetime_56,
            color_60);
         if (f0_13(ticket_100)) f0_15(-1, ad_28, ad_36);
      }
      if (ticket_100 > 0) return (ticket_100);
      error_92 = GetLastError();
      if (error_92 == 128/* TRADE_TIMEOUT */ || error_92 == 142 || error_92 == 143) {
         Sleep(66000);
         if (f0_1(a_symbol_0, a_cmd_8, a_magic_44, datetime_64)) break;
      } else {
         point_84 = MarketInfo(a_symbol_0, MODE_POINT);
         ask_68 = MarketInfo(a_symbol_0, MODE_ASK);
         bid_76 = MarketInfo(a_symbol_0, MODE_BID);
         if (ask_68 == 0.0 && bid_76 == 0.0) Comment("SetOrder(): Проверьте в обзоре рынка наличие символа " + a_symbol_0);
         if (error_92 == 130/* INVALID_STOPS */) {
            switch (a_cmd_8) {
            case OP_BUYLIMIT:
               if (ad_20 > ask_68 - stoplevel_104 * point_84) ad_20 = ask_68 - stoplevel_104 * point_84;
               if (ad_28 > ad_20 - (stoplevel_104 + 1) * point_84) ad_28 = ad_20 - (stoplevel_104 + 1) * point_84;
               if (!(ad_36 > 0.0 && ad_36 < ad_20 + (stoplevel_104 + 1) * point_84)) break;
               ad_36 = ad_20 + (stoplevel_104 + 1) * point_84;
               break;
            case OP_BUYSTOP:
               if (ad_20 < ask_68 + (stoplevel_104 + 1) * point_84) ad_20 = ask_68 + (stoplevel_104 + 1) * point_84;
               if (ad_28 > ad_20 - (stoplevel_104 + 1) * point_84) ad_28 = ad_20 - (stoplevel_104 + 1) * point_84;
               if (!(ad_36 > 0.0 && ad_36 < ad_20 + (stoplevel_104 + 1) * point_84)) break;
               ad_36 = ad_20 + (stoplevel_104 + 1) * point_84;
               break;
            case OP_SELLLIMIT:
               if (ad_20 < bid_76 + stoplevel_104 * point_84) ad_20 = bid_76 + stoplevel_104 * point_84;
               if (ad_28 > 0.0 && ad_28 < ad_20 + (stoplevel_104 + 1) * point_84) ad_28 = ad_20 + (stoplevel_104 + 1) * point_84;
               if (ad_36 <= ad_20 - (stoplevel_104 + 1) * point_84) break;
               ad_36 = ad_20 - (stoplevel_104 + 1) * point_84;
               break;
            case OP_SELLSTOP:
               if (ad_20 > bid_76 - stoplevel_104 * point_84) ad_20 = bid_76 - stoplevel_104 * point_84;
               if (ad_28 > 0.0 && ad_28 < ad_20 + (stoplevel_104 + 1) * point_84) ad_28 = ad_20 + (stoplevel_104 + 1) * point_84;
               if (ad_36 <= ad_20 - (stoplevel_104 + 1) * point_84) break;
               ad_36 = ad_20 - (stoplevel_104 + 1) * point_84;
            }
            Print("SetOrder(): Скорректированы ценовые уровни");
         }
         if (error_92 == 2/* COMMON_ERROR */ || error_92 == 64/* ACCOUNT_DISABLED */ || error_92 == 65/* INVALID_ACCOUNT */ || error_92 == 133/* TRADE_DISABLED */) break;
         if (error_92 == 4/* SERVER_BUSY */ || error_92 == 131/* INVALID_TRADE_VOLUME */ || error_92 == 132/* MARKET_CLOSED */) {
            Sleep(300000);
            break;
         }
         if (error_92 == 8/* TOO_FREQUENT_REQUESTS */ || error_92 == 141/* TOO_MANY_REQUESTS */) Sleep(100000);
         if (error_92 == 139/* ORDER_LOCKED */ || error_92 == 140/* LONG_POSITIONS_ONLY_ALLOWED */ || error_92 == 148/* TRADE_TOO_MANY_ORDERS */) break;
         if (error_92 == 146/* TRADE_CONTEXT_BUSY */) while (IsTradeContextBusy()) Sleep(11000);
         if (error_92 == 147/* TRADE_EXPIRATION_DENIED */) a_datetime_56 = 0;
         else
            if (error_92 != 135/* PRICE_CHANGED */ && error_92 != 138/* REQUOTE */) Sleep(7700.0);
      }
   }
   return (0);
}

bool f0_1(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1, int ai_16 = 0, double ad_20 = 0.0) {
   int cmd_36;
   int order_total_32 = OrdersTotal();
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_28 = 0; pos_28 < order_total_32; pos_28++) {
      if (OrderSelect(pos_28, SELECT_BY_POS, MODE_TRADES)) {
         cmd_36 = OrderType();
         if (cmd_36 > OP_SELL && cmd_36 < 6) {
            if (OrderSymbol() == as_0 || as_0 == "" && a_cmd_8 < OP_BUY || cmd_36 == a_cmd_8) {
               if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) {
                  if (ai_16 <= OrderOpenTime()) {
                     if (ad_20 != 0.0)
                        if (NormalizeDouble(ad_20, Digits) == NormalizeDouble(OrderOpenPrice(), Digits)) return (TRUE);
                  }
               }
            }
         }
      }
   }
   return (FALSE);
}

bool f0_3(string as_0 = "", int ai_8 = -1, int a_magic_12 = -1, int ai_16 = 0, double ad_20 = 0.0) {
   int order_total_32 = OrdersTotal();
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_28 = 0; pos_28 < order_total_32; pos_28++) {
      if (OrderSelect(pos_28, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == as_0 || as_0 == "") {
            if (ai_8 < 0 || (ai_8 == 0 && OrderType() == OP_BUY || OrderType() == OP_BUYSTOP || OrderType() == OP_BUYLIMIT) || (ai_8 == 1 && OrderType() == OP_SELL || OrderType() == OP_SELLSTOP ||
               OrderType() == OP_SELLLIMIT)) {
               if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) {
                  if (ai_16 <= OrderOpenTime())
                     if (NormalizeDouble(ad_20, Digits) == NormalizeDouble(OrderOpenPrice(), Digits)) return (TRUE);
               }
            }
         }
      }
   }
   return (FALSE);
}

void f0_2(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1) {
   double point_16;
   double price_24;
   int order_total_36 = OrdersTotal();
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_32 = 0; pos_32 < order_total_36; pos_32++) {
      if (OrderSelect(pos_32, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == as_0 || as_0 == "" && a_cmd_8 < OP_BUY || OrderType() == a_cmd_8) {
            point_16 = MarketInfo(OrderSymbol(), MODE_POINT);
            if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12) {
               if (OrderType() == OP_BUY) {
                  price_24 = MarketInfo(OrderSymbol(), MODE_BID);
                  if ((!IfProfTrail && OrderProfit() > 0.0) || price_24 - OrderOpenPrice() > TrailingStop * point_16)
                     if (OrderStopLoss() < price_24 - (TrailingStop + TrailingStep - 1) * point_16) f0_15(-1, price_24 - TrailingStop * point_16, -1);
               }
               if (OrderType() == OP_SELL) {
                  price_24 = MarketInfo(OrderSymbol(), MODE_ASK);
                  if ((!IfProfTrail && OrderProfit() > 0.0) || OrderOpenPrice() - price_24 > TrailingStop * point_16)
                     if (OrderStopLoss() > price_24 + (TrailingStop + TrailingStep - 1) * point_16 || OrderStopLoss() == 0.0) f0_15(-1, price_24 + TrailingStop * point_16, -1);
               }
            }
         }
      }
   }
}

void f0_15(double a_order_open_price_0 = -1.0, double a_order_stoploss_8 = 0.0, double a_order_takeprofit_16 = 0.0, int a_datetime_24 = 0) {
   bool bool_28;
   double ask_40;
   double bid_48;
   int error_76;
   int digits_72 = MarketInfo(OrderSymbol(), MODE_DIGITS);
   if (a_order_open_price_0 <= 0.0) a_order_open_price_0 = OrderOpenPrice();
   if (a_order_stoploss_8 < 0.0) a_order_stoploss_8 = OrderStopLoss();
   if (a_order_takeprofit_16 < 0.0) a_order_takeprofit_16 = OrderTakeProfit();
   a_order_open_price_0 = NormalizeDouble(a_order_open_price_0, digits_72);
   a_order_stoploss_8 = NormalizeDouble(a_order_stoploss_8, digits_72);
   a_order_takeprofit_16 = NormalizeDouble(a_order_takeprofit_16, digits_72);
   double ld_32 = NormalizeDouble(OrderOpenPrice(), digits_72);
   double ld_56 = NormalizeDouble(OrderStopLoss(), digits_72);
   double ld_64 = NormalizeDouble(OrderTakeProfit(), digits_72);
   if (a_order_open_price_0 != ld_32 || a_order_stoploss_8 != ld_56 || a_order_takeprofit_16 != ld_64) {
      for (int li_80 = 1; li_80 <= 3; li_80++) {
         if (!IsTesting() && (!IsExpertEnabled()) || IsStopped()) break;
         while (!IsTradeAllowed()) Sleep(5000);
         RefreshRates();
         bool_28 = OrderModify(OrderTicket(), a_order_open_price_0, a_order_stoploss_8, a_order_takeprofit_16, a_datetime_24);
         if (bool_28) break;
         error_76 = GetLastError();
         ask_40 = MarketInfo(OrderSymbol(), MODE_ASK);
         bid_48 = MarketInfo(OrderSymbol(), MODE_BID);
         Alert("Error(", error_76, ") modifying order: ", error_76, ", try ", li_80);
         Alert("Ask=", ask_40, "  Bid=", bid_48, "  sy=", OrderSymbol(), "  op=" + OrderType(), "  pp=", a_order_open_price_0, "  sl=", a_order_stoploss_8, "  tp=", a_order_takeprofit_16);
         Sleep(10000);
      }
   }
}

int f0_12(string as_0, string as_8, int ai_16 = 5) {
   string ls_unused_20 = " Автор функции для шаблона : www.expforex.at.ua";
   bool li_ret_28 = FALSE;
   if (TimeCurrent() > StrToTime(as_0 + ":" + as_8) && DayOfWeek() == ai_16) li_ret_28 = TRUE;
   return (li_ret_28);
}

int f0_11(string as_0 = "", int a_cmd_8 = -1, int a_magic_12 = -1, string as_16 = "", string as_24 = "", int ai_32 = 5) {
   string ls_unused_36 = " Автор функции для шаблона : www.expforex.at.ua";
   int hist_total_48 = OrdersHistoryTotal();
   int li_52 = f0_14(as_0, a_magic_12);
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_44 = hist_total_48 - 1; pos_44 >= 0; pos_44--) {
      if (OrderSelect(pos_44, SELECT_BY_POS, MODE_HISTORY)) {
         if (OrderSymbol() == as_0 || as_0 == "" && a_cmd_8 < OP_BUY || OrderType() == a_cmd_8) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
               if (a_magic_12 < 0 || OrderMagicNumber() == a_magic_12)
                  if (OrderCloseTime() >= StrToTime(TimeToStr(li_52, TIME_DATE) + " " + as_16 + ":" + as_24) && TimeDayOfWeek(OrderCloseTime()) == ai_32 && OrderProfit() <= 0.0) f0_4(OrderSymbol(), OrderType(), OrderLots(), OrderStopLoss(), OrderTakeProfit(), OrderMagicNumber(), "");
            }
         }
      }
   }
   return (f0_8(as_0, a_magic_12));
}

int f0_14(string as_0 = "", int a_magic_8 = -1) {
   int datetime_12;
   int hist_total_20 = OrdersHistoryTotal();
   int datetime_24 = -1;
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_16 = 0; pos_16 < hist_total_20; pos_16++) {
      if (OrderSelect(pos_16, SELECT_BY_POS, MODE_HISTORY)) {
         if (OrderSymbol() == as_0 || as_0 == "" && a_magic_8 < 0 || OrderMagicNumber() == a_magic_8) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
               if (datetime_12 < OrderCloseTime()) {
                  datetime_12 = OrderCloseTime();
                  datetime_24 = OrderCloseTime();
               }
            }
         }
      }
   }
   return (datetime_24);
}

int f0_8(string as_0 = "", int a_magic_8 = -1) {
   int datetime_12;
   int hist_total_20 = OrdersHistoryTotal();
   int ticket_24 = -1;
   if (as_0 == "0") as_0 = Symbol();
   for (int pos_16 = 0; pos_16 < hist_total_20; pos_16++) {
      if (OrderSelect(pos_16, SELECT_BY_POS, MODE_HISTORY)) {
         if (OrderSymbol() == as_0 || as_0 == "" && a_magic_8 < 0 || OrderMagicNumber() == a_magic_8) {
            if (OrderType() == OP_BUY || OrderType() == OP_SELL) {
               if (datetime_12 < OrderCloseTime()) {
                  datetime_12 = OrderCloseTime();
                  ticket_24 = OrderTicket();
               }
            }
         }
      }
   }
   return (ticket_24);
}

int f0_4(string a_symbol_0, int a_cmd_8, double a_lots_12, double a_price_20 = 0.0, double a_price_28 = 0.0, int a_magic_36 = 0, string a_comment_40 = "") {
   color color_48;
   int datetime_52;
   double price_56;
   double price_64;
   double price_72;
   int digits_80;
   int error_84;
   int ticket_92 = 0;
   string ls_unused_96 = "";
   if (a_symbol_0 == "" || a_symbol_0 == "0") a_symbol_0 = Symbol();
   if (a_cmd_8 == OP_BUY) color_48 = Red;
   else color_48 = Green;
   string ls_unused_104 = " Автор функции для шаблона : www.expforex.at.ua";
   for (int li_88 = 1; li_88 <= 3; li_88++) {
      if (!IsTesting() && (!IsExpertEnabled()) || IsStopped()) break;
      while (!IsTradeAllowed()) Sleep(5000);
      RefreshRates();
      digits_80 = MarketInfo(a_symbol_0, MODE_DIGITS);
      price_64 = MarketInfo(a_symbol_0, MODE_ASK);
      price_72 = MarketInfo(a_symbol_0, MODE_BID);
      if (a_cmd_8 == OP_BUY) price_56 = price_64;
      else price_56 = price_72;
      price_56 = NormalizeDouble(price_56, digits_80);
      datetime_52 = TimeCurrent();
      if (!MarketWatch) ticket_92 = OrderSend(a_symbol_0, a_cmd_8, a_lots_12, price_56, 1, a_price_20, a_price_28, a_comment_40, a_magic_36, 0, color_48);
      if (MarketWatch) {
         ticket_92 = OrderSend(a_symbol_0, a_cmd_8, a_lots_12, price_56, 1, 0, 0, a_comment_40, a_magic_36, 0, color_48);
         if (f0_13(ticket_92)) f0_15(-1, a_price_20, a_price_28);
      }
      if (ticket_92 > 0) break;
      error_84 = GetLastError();
      if (error_84 == 128/* TRADE_TIMEOUT */ || error_84 == 142 || error_84 == 143) Sleep(66666.0);
      Alert("Error(", error_84, ") opening position: ", ErrorDescription(error_84), ", try ", li_88);
      Alert("Ask=", price_64, " Bid=", price_72, " sy=", a_symbol_0, " ll=", a_lots_12, " op=", a_cmd_8, " pp=", price_56, " sl=", a_price_20, " tp=", a_price_28, " mn=",
         a_magic_36);
      if (price_64 == 0.0 && price_72 == 0.0) Alert("Проверьте в Обзоре рынка наличие символа " + a_symbol_0);
      if (error_84 == 2/* COMMON_ERROR */ || error_84 == 64/* ACCOUNT_DISABLED */ || error_84 == 65/* INVALID_ACCOUNT */ || error_84 == 133/* TRADE_DISABLED */) break;
      if (error_84 == 4/* SERVER_BUSY */ || error_84 == 131/* INVALID_TRADE_VOLUME */ || error_84 == 132/* MARKET_CLOSED */) {
         Sleep(300000);
         break;
      }
      if (error_84 == 140/* LONG_POSITIONS_ONLY_ALLOWED */ || error_84 == 148/* TRADE_TOO_MANY_ORDERS */ || error_84 == 4110/* LONGS__NOT_ALLOWED */ || error_84 == 4111/* SHORTS_NOT_ALLOWED */) break;
      if (error_84 == 141/* TOO_MANY_REQUESTS */) Sleep(100000);
      if (error_84 == 145/* TRADE_MODIFY_DENIED */) Sleep(17000);
      if (error_84 == 146/* TRADE_CONTEXT_BUSY */) while (IsTradeContextBusy()) Sleep(11000);
      if (error_84 != 135/* PRICE_CHANGED */) Sleep(7700.0);
   }
   return (ticket_92);
}

int f0_13(int ai_0, string as_4 = "", int a_cmd_12 = -1, int a_magic_16 = -1) {
   int order_total_24 = OrdersTotal();
   string ls_unused_28 = " Автор функции для шаблона : www.expforex.at.ua";
   if (as_4 == "0") as_4 = Symbol();
   for (int pos_20 = 0; pos_20 < order_total_24; pos_20++) {
      if (OrderSelect(pos_20, SELECT_BY_POS, MODE_TRADES)) {
         if (OrderSymbol() == as_4 || as_4 == "" && a_cmd_12 < OP_BUY || OrderType() == a_cmd_12)
            if (a_magic_16 < 0 || OrderMagicNumber() == a_magic_16 && OrderTicket() == ai_0) return (1);
      }
   }
   return (0);
}
